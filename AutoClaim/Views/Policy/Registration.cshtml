@model AutoClaim.ViewModel.PolicyInsuranceViewModel
@{
    ViewBag.Title = "Registration";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Policy Registration</h2>
@using (Html.BeginForm())
{
<div class="form-horizontal">
    <h4>Policy</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @*<div class="form-group">
            @Html.LabelFor(r=>r.Policy.Id, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(r => r.Policy.Id, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(r => r.Policy.Id, "", new { @class = "text-danger" })
            </div>
        </div>*@

    <div class="form-group">
        @Html.LabelFor(r => r.Policy.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(r => r.Policy.FirstName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(r => r.Policy.FirstName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(r => r.Policy.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(r => r.Policy.LastName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(r => r.Policy.LastName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(r => r.Policy.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
        @*<div class="col-md-10">
                @Html.EditorFor(model => model.Gender, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
            </div>*@
        <div class="editor-field col-md-10">
            @Html.DropDownList("Gender", new List<SelectListItem>{
            new SelectListItem{ Text="Male", Value="Male"},
            new SelectListItem{ Text="Female", Value="Female"},
              new SelectListItem{ Text="Others", Value="Others"}
            }, "-- Select --"
 )
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(r => r.Policy.DateOfBirth, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(r => r.Policy.DateOfBirth, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(r => r.Policy.DateOfBirth, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(r => r.Policy.VechicleNumber, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(r => r.Policy.VechicleNumber, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(r => r.Policy.VechicleNumber, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(r => r.Policy.VechicleType, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="editor-field col-md-10">
            @Html.DropDownList("VehiceType", new List<SelectListItem>{
            new SelectListItem{ Text="Two_Wheeler", Value="Two_Wheeler"},
            new SelectListItem{ Text="Four_Wheeler", Value="Four_Wheeler"}
              
            }, "---- Select ----")         
            @Html.ValidationMessageFor(r => r.Policy.VechicleType, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(r => r.Policy.VehicleCC, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="editor-field col-md-10">
            @Html.DropDownList("VehiceCC", new List<SelectListItem>{
            new SelectListItem{ Text="<100", Value="<100"},
            new SelectListItem{ Text=">100", Value=">100"},
              new SelectListItem{ Text="<1000", Value="<1000"},
               new SelectListItem{ Text=">=1000", Value=">=1000"},
            }, "-- Select --")

        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(r => r.Policy.EmailId, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(r => r.Policy.EmailId, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(r => r.Policy.EmailId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(r => r.Policy.Address, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextAreaFor(r => r.Policy.Address, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(r => r.Policy.Address, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(r => r.Policy.MobileNo, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(r => r.Policy.MobileNo, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(r => r.Policy.MobileNo, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>

}

